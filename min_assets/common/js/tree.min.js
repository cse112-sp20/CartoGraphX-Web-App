let directoryTree={},fileKeyToNameMap={},editorToFileKeyMap={};const DIRECTORY_TREE="/directory_trees/",TEAM_MAP="/team_maps/",CURRENT_EDITORS="/current_editors/",FILE="/files/",USER="/users/",SECONDS_PER_REFRESH=2;let firstTreePrint=!0,editorsChanged=!1,directoryStructureChanged=!1,subscribedToDirectoryTreeChanges=!1;const createTree=(a,b)=>{dbAccess=firebase.database(),subscribeToChanges(TEAM_MAP,a,a=>{editorToFileKeyMap=a.val().current_editors,directoryTreeKey=a.val().rootFolder,editorsChanged=!0;subscribedToDirectoryTreeChanges||subscribeToChanges(DIRECTORY_TREE,directoryTreeKey,async a=>{subscribedToDirectoryTreeChanges=!0,directoryTree=a.val(),directoryStructureChanged=!0,generateFileKeyToNameMap(b),firstTreePrint&&(displayDirectoryTree(),firstTreePrint=!1,directoryStructureChanged=!1,editorsChanged=!1,setInterval(()=>{(editorsChanged||directoryStructureChanged)&&(displayDirectoryTree(),editorsChanged=!1,directoryStructureChanged=!1)},1e3*SECONDS_PER_REFRESH))})})},subscribeToChanges=(a,b,c)=>dbAccess.ref(a+b).on("value",c),generateFileKeyToNameMap=a=>{let b=[directoryTree];for(console.log("gen");0!=b.length;)for(let c in subDir=b.pop(),subDir)fileKeyToNameMap.hasOwnProperty(subDir[c])&&fileKeyToNameMap[subDir[c]]==c||("string"==typeof subDir[c]?(fileKeyToNameMap[subDir[c]]=c.split(",").join("."),a.push(c.split(",").join("."))):b.push(subDir[c]))},displayDirectoryTree=()=>{const a=document.getElementById("tree");str=generateSourceTree(directoryTree),a.innerHTML=str},generateSourceTree=a=>{let b="";for(topLevelFile in a)"string"==typeof a[topLevelFile]?b+=topLevelFile+"\n":(b+=topLevelFile+"\n",b+=generateSourceTreeRec(a[topLevelFile],""));return b},generateSourceTreeRec=(a,b)=>{let c=[[" \u251C\u2500 "," \u2502  "],[" \u2514\u2500 ","    "]],d=Object.entries(Object.entries(a)),e="";for(const[f,[g,h]]of d){let a;a=isLastElementInArray(d,f)?c[1]:c[0],"string"==typeof h?e+=b+a[0]+fileKeyToNameMap[h]+" "+listEditorsOf(h)+"\n":(e+=b+a[0]+g.split(",").join(".")+"\n",e+=generateSourceTreeRec(h,b+a[1]))}return e},listEditorsOf=a=>{let b="(",c=!1;for(let d in editorToFileKeyMap)editorToFileKeyMap[d]==a&&(b+=colorText(d,"red")+", ",c=!0);return b+=")",c?b.substring(0,b.length-3)+")":""},colorText=(a,b)=>"<span style=\"color:"+b+"\">"+a+"</span>",isLastElementInArray=(a,b)=>0==a.length?b==a.length:b==a.length-1,setDirectoryStructure=a=>{directoryTree=a},setEditorToFileKeyMap=a=>{editorToFileKeyMap=a};